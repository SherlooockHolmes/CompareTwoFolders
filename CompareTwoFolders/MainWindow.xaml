<Window x:Class="CompareTwoFolders.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CompareTwoFolders"
        mc:Ignorable="d"
        Width="800"
        Height="450" 
        Title="CompareTwoFolders"
        WindowState="Maximized"
        FontFamily="Trebuchet MS"
        FontSize="14"
        FontWeight="Regular"
        FlowDirection="LeftToRight">
    <Grid Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/> 
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>    
            <RowDefinition Height="Auto"/> 
        </Grid.RowDefinitions>
        <Label Grid.Row="0"
               Content="۷۸۶" 
               FontFamily="B Nazanin" 
               Opacity="0.1"
               FontSize="10"
               HorizontalAlignment="Left"
               FlowDirection="RightToLeft" />
        <StackPanel Grid.Row="0">
            <Label Content="CompareTwoFolders"
                   FontFamily="Times New Roman"
                   FontSize="24"
                   FontWeight="Bold"
                   HorizontalAlignment="Center"/>
            <Label Content="Version 4.0.0.0"
                   HorizontalAlignment="Center"/>
            <Label Content="Created by: Mohammad  Gol ara"
                   HorizontalAlignment="Center"/>
        </StackPanel>
        <Grid Grid.Row="1" Margin="0,10">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Button x:Name="ButtonOpenLeftFolder" Content="Open Left Folder" Grid.Row="0" Margin="0,10" Click="ButtonSelectLeftFolder_Click" />
                <TextBox x:Name="TextBoxOpenLeftFolder" Text="Left Folder Path" IsReadOnly="True" IsReadOnlyCaretVisible="True" Grid.Row="1" BorderThickness="1" BorderBrush="Black" VerticalContentAlignment="Center" />
            </Grid>
            <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Button x:Name="ButtonOpenRightFolder" Content="Open Right Folder" Grid.Row="0" Margin="0,10" Click="ButtonSelectRightFolder_Click" />
                <TextBox x:Name="TextBoxOpenRightFolder" Text="Right Folder Path" IsReadOnly="True" IsReadOnlyCaretVisible="True" Grid.Row="1" BorderThickness="1" BorderBrush="Black" VerticalContentAlignment="Center" />
            </Grid> 
        </Grid>
        <DataGrid x:Name="DataGridFolders"
                  Grid.Row="2" GridLinesVisibility="All"
                  HeadersVisibility="Column" RowHeaderWidth="0" ColumnWidth="Auto" SelectionMode="Single" SelectionUnit="Cell"
                  IsReadOnly="True" AutoGenerateColumns="False" IsTextSearchEnabled="False"
                  CanUserAddRows="False" CanUserDeleteRows="False" CanUserReorderColumns="False" CanUserResizeRows="True" CanUserResizeColumns="True" CanUserSortColumns="False" 
                  HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto"
                  TextBlock.TextAlignment="Left" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"
                  PreviewMouseDoubleClick="DataGridFolders_PreviewMouseDoubleClick">
            <DataGrid.Resources>
                <Style TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="Foreground" Value="Black" />
                    <Setter Property="BorderBrush" Value="Black" />
                    <Setter Property="BorderThickness" Value="1" />
                    <Setter Property="TextBlock.TextWrapping" Value="NoWrap" />
                    <Setter Property="TextBlock.TextAlignment" Value="Center" />
                    <Setter Property="HorizontalAlignment" Value="Stretch" />
                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                    <Setter Property="VerticalAlignment" Value="Stretch" />
                    <Setter Property="VerticalContentAlignment" Value="Center" />
                </Style>
                <Style TargetType="{x:Type DataGridCell}" x:Key="DataGridCellForColumnLeft">
                    <Setter Property="Foreground" Value="Black" />
                    <Setter Property="Background" Value="Transparent" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=ButtonEraseLeftData, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Value="True">
                            <Setter Property="Background" Value="LightPink" />
                        </DataTrigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ButtonEraseLeftData}" Value="True" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" Value="SlateBlue" />
                            <Setter Property="Foreground" Value="White" />
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
                <Style TargetType="{x:Type DataGridCell}" x:Key="DataGridCellForColumnRight">
                    <Setter Property="Foreground" Value="Black" />
                    <Setter Property="Background" Value="Transparent" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=ButtonEraseRightData, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Value="True">
                            <Setter Property="Background" Value="LightPink" />
                        </DataTrigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ButtonEraseRightData}" Value="True" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" Value="SlateBlue" />
                            <Setter Property="Foreground" Value="White" />
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
                <Style TargetType="{x:Type ToggleButton}" x:Key="ToggleButtonEraseLeftOrRight">
                    <Setter Property="TextBlock.TextAlignment" Value="Center" />
                    <Setter Property="FontFamily" Value="Segoe UI" />
                    <Setter Property="FontSize" Value="10" />
                    <Setter Property="FontWeight" Value="Bold" />
                </Style>
            </DataGrid.Resources>
            <DataGrid.Columns>
                <DataGridTextColumn Header="Left Path" Width="43*" Binding="{Binding Path=LeftData, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" CellStyle="{StaticResource DataGridCellForColumnLeft}" />
                <DataGridTemplateColumn Header="Erase" Width="5*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ToggleButton x:Name="ToggleButtonEraseLeft" Content="Erase&#x0A;Left" Grid.Column="0" IsChecked="{Binding Path=ButtonEraseLeftData, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource ToggleButtonEraseLeftOrRight}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Ignore" Width="4*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ToggleButton x:Name="ToggleButtonIgnoreThis" Content="Ignore&#x0A;This" Grid.Column="0" IsChecked="{Binding Path=ButtonIgnoreThisData, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Checked="ToggleButtonIgnoreThis_Checked" Style="{StaticResource ToggleButtonEraseLeftOrRight}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Erase" Width="5*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ToggleButton x:Name="ToggleButtonEraseRight" Content="Erase&#x0A;Right" Grid.Column="0" IsChecked="{Binding Path=ButtonEraseRightData, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource ToggleButtonEraseLeftOrRight}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Header="Right Path" Width="43*" Binding="{Binding Path=RightData, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" CellStyle="{StaticResource DataGridCellForColumnRight}" />
            </DataGrid.Columns>
        </DataGrid>
        <Grid Grid.Row="3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <ProgressBar Name="ProgressBarMain"
                             Grid.Row="0"
                             Grid.Column="0"
                             Grid.ColumnSpan="2"
                             Margin="0,5"
                             Minimum="0"
                             Maximum="100"
                             Value="{Binding ElementName=TextBlockProgressBar, Path=Text, Mode=OneWay}" />
                <TextBlock x:Name="TextBlockProgressBar"
                           Text="0%" 
                           Grid.Row="0"
                           Grid.Column="0"
                           Grid.ColumnSpan="2"
                           HorizontalAlignment="Center" 
                           VerticalAlignment="Center"
                           FontWeight="Bold"/>
                <ToggleButton x:Name="ToggleButtonFilterExt" 
                              Content=" Filter Ext "
                              Grid.Row="1"
                              Grid.Column="0"
                              Margin="10,0" 
                              Click="ToggleButtonFilterExt_Click" />
                <TextBox x:Name="TextBoxFilterExt" 
                         Grid.Row="1"
                         Grid.Column="1" />
                <TextBlock Text="Type ext here to filter. E.g.:  *.jpg; *.exe; *.txt" 
                           FontStyle="Italic" 
                           Foreground="Gray"
                           Grid.Row="1"
                           Grid.Column="1"
                           Margin="5,0,0,0" 
                           VerticalAlignment="Center"
                           IsHitTestVisible="False">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Setter Property="Visibility" Value="Collapsed" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Text, ElementName=TextBoxFilterExt}" Value="">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Text.Length, ElementName=TextBoxFilterExt}" Value="0">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </Grid>          
            <StackPanel Grid.Column="1" Margin="20,0,0,0">
                <TextBlock Text="Compare Mode:" FontWeight="Bold" Margin="0,0,0,5" HorizontalAlignment="Center"/>
                <StackPanel HorizontalAlignment="Center">
                    <RadioButton x:Name="RadioButtonCompareByFileName" Content="FileName" GroupName="CompareMode" IsChecked="True" />
                    <RadioButton x:Name="RadioButtonCompareByHashCode" Content="HashCode" GroupName="CompareMode" />
                </StackPanel>
            </StackPanel>
            <Button x:Name="ButtonStartStopSearch" Grid.Column="2" Margin="25,10" Click="ButtonStartStopSearch_Click">
                <Button.Content>
                    <TextBlock x:Name="TextBlockStartStopSearch" Text="Start Search" Margin="20,5" />
                </Button.Content>
            </Button>
            <Button x:Name="ButtonEraseDuplicates" Grid.Column="3" Margin="0,10,25,10" IsEnabled="False" Click="ButtonEraseDuplicates_Click">
                <Button.Content>
                    <TextBlock Text="Erase" Margin="20,5" />
                </Button.Content>
            </Button>
        </Grid>
    </Grid>
</Window>